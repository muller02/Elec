/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-20 07:21:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cart.model.vo.CartInfo;
import java.util.List;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("cart.model.vo.CartInfo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<CartInfo> cartInfoList = (List<CartInfo>)request.getAttribute("cartInfoList");
	int totalPrice = 0;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\" />\r\n");
      out.write("    <title>장바구니</title>\r\n");
      out.write("    <script src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"phrasesJ\">\r\n");
 if(cartInfoList == null || cartInfoList.size() == 0){ 
      out.write("        \r\n");
      out.write("        <p id=\"pEmptyJ\">현재 장바구니가 비어있습니다.</p>\r\n");
 } else {
      out.write("\r\n");
      out.write("        <p id=\"p1J\">장바구니에 들어있는 제품입니다</p>\r\n");
 } 
      out.write("\r\n");
      out.write("        <p id=\"p2J\">모든 제품은 무료배송 서비스가 적용됩니다.</p>\r\n");
      out.write("    </div>\r\n");
 if(cartInfoList == null || cartInfoList.size() == 0){ 
      out.write("\r\n");
      out.write("    <div id=\"isEmptyCartJ\">\r\n");
      out.write("        <button id=\"btnMainJ\" class=\"engFontJ\" onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("'\">Go to Main</button>\r\n");
      out.write("        <div id=\"goToShoppingJ\">\r\n");
      out.write("           <div id=\"goToNotebookJ\" style=\" background-image: url('");
      out.print( request.getContextPath());
      out.write("/images/LJH/cartNotebook.png');\">\r\n");
      out.write("            <p class=\"engFontJ\">\r\n");
      out.write("                Explore <br> Our NoteBook</p>\r\n");
      out.write("            <button id=\"btnNotebookJ\" class=\"engFontJ\" onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("'\">shop</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"goToPhoneJ\" style=\" background-image: url('");
      out.print( request.getContextPath() );
      out.write("/images/LJH/cartPhone.png');\">\r\n");
      out.write("            <p class=\"engFontJ\">\r\n");
      out.write("                Explore <br> Our Phone</p>\r\n");
      out.write("            <button id=\"btnPhoneJ\" class=\"engFontJ\" onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("'\">shop</button>\r\n");
      out.write("           </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
}else{ 
      out.write("\r\n");
      out.write("    <div id=\"cartListJ\">\r\n");
      out.write("        <div class=\"hrJ\"></div>\r\n");
      out.write("        <ul id=\"ulJ\">\r\n");
      out.write("        \t");
 for(int i=0; i<cartInfoList.size(); i++){
      out.write("\r\n");
      out.write("        \t");
 CartInfo ci = cartInfoList.get(i); 
      out.write("\r\n");
      out.write("            <li>\r\n");
      out.write("                <div class=\"listJ\">\r\n");
      out.write("                    <img src=\"");
      out.print( request.getContextPath());
      out.print( ci.getProductImg() );
      out.write("/thum.png\" alt=\"\">\r\n");
      out.write("                    <div class=\"prodInfoJ\">\r\n");
      out.write("                    \t");
 String productName = ci.getProductName() + " " + ci.getInch() + " " + ci.getCapacity() + " " + ci.getColorName(); 
      out.write("\r\n");
      out.write("                        <div class=\"info1J\"><p class=\"engFontJ\">");
      out.print( productName );
      out.write("</p></div>\r\n");
      out.write("                        <div class=\"info2J\"><p class=\"korFontJ\" value=\"");
      out.print( ci.getAmount());
      out.write("\">수량  : ");
      out.print( ci.getAmount() );
      out.write("</p></div>\r\n");
      out.write("                        ");
 int price = ci.getPrice() * (100 - ci.getDiscountRate()) / 100; 
                        	totalPrice += price;
      out.write("\r\n");
      out.write("                        <div class=\"info3J\"><p class=\"engFontJ\">");
      out.print( price );
      out.write("WON</p></div>\r\n");
      out.write("                        <div class=\"lineJ\"></div>\r\n");
      out.write("                        <button class=\"btnDeleteJ\" value=\"");
      out.print( ci.getProdSerialCode() );
      out.write("\" >삭제</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
 if(i != cartInfoList.size() - 1){ 
      out.write("\r\n");
      out.write("                \t<hr id=\"cartHrJ\">\r\n");
      out.write("               \t");
 } 
      out.write("\r\n");
      out.write("            </li>\r\n");
      out.write("           ");
 } 
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("        <div id=\"lastRowJ\">\r\n");
      out.write("            <div class=\"hrJ\"></div> <!-- 마지막 li인 경우 이걸 ul밖에 작성하도록 하기-->\r\n");
      out.write("            <div id=\"divRightJ\">\r\n");
      out.write("                <div id=\"totalRowJ\">\r\n");
      out.write("                    <p class=\"engFontJ\" id=\"totalJ\">");
      out.print( totalPrice );
      out.write(" WON</p>\r\n");
      out.write("                    <p class=\"engFontJ\">Total : </p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"payRowJ\">\r\n");
      out.write("                    <button id=\"btnPayJ\" class=\"korFontJ\" value=\"");
      out.print( totalPrice );
      out.write("\">결제하기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("       </div>\r\n");
      out.write("    </div>\r\n");
 } 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(\".btnDeleteJ\").click(function(){\r\n");
      out.write("\r\n");
      out.write("    var resultConfirm = confirm(\"상품을 장바구니에서 삭제하시겠습니까?\");\r\n");
      out.write("    if(resultConfirm == true){\r\n");
      out.write("   \t \tvar prodSerialCode = $(this).val();\r\n");
      out.write("   \t   \r\n");
      out.write("   \t \tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/cart/delete?prodSerialCode=\"+prodSerialCode;\t\r\n");
      out.write("   } \r\n");
      out.write("   \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(\"#btnPayJ\").click(function(){\r\n");
      out.write("\t\r\n");
      out.write("    if(confirm(\"상품을 구매하시겠습니까?\") == true){\r\n");
      out.write("    \tvar orderSerialcode = \"\";\r\n");
      out.write("    \tvar orderQuantityList = \"\";\r\n");
      out.write("        var totalPrice = $(this).val();\r\n");
      out.write("    \t\r\n");
      out.write("        var length = $('.prodInfoJ').length;\r\n");
      out.write("        var serialCode = document.querySelectorAll(\".btnDeleteJ\");\r\n");
      out.write("        var quantityList = document.querySelectorAll(\".info2J p\");\r\n");
      out.write("        \r\n");
      out.write("        for(var i=0; i<length; i++){\r\n");
      out.write("            if(i == length - 1){\r\n");
      out.write("            \torderSerialcode += serialCode[i].getAttribute('value');\r\n");
      out.write("            \torderQuantityList += quantityList[i].getAttribute('value');\r\n");
      out.write("            }\r\n");
      out.write("            else{\r\n");
      out.write("            \torderSerialcode += serialCode[i].getAttribute('value') + \",\";\r\n");
      out.write("            \torderQuantityList += quantityList[i].getAttribute('value') + \",\";\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        console.log(orderSerialcode);\r\n");
      out.write("        console.log(orderQuantityList);\r\n");
      out.write("        console.log(totalPrice);\r\n");
      out.write("        \r\n");
      out.write("        location.href=\"");
      out.print(request.getContextPath());
      out.write("/order/orderpage?orderSerialcode=\"+orderSerialcode+\"&orderQuantityList=\"+orderQuantityList+\"&totalPrice\"+totalPrice;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
